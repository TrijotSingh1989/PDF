install.packages('dplyr')
package(dplyr)
library(dplyr)
library(tidyverse)
udm_tables <- c("member","customer","policy", "premium")
for (t in udm_tables){}
for (t in udm_tables){
assign(paste0("udm_",t),tbl(udm,in_schema("UDM.Intelligence",t)))
}
for (t in udm_tables){}
assign(paste0("udm_",t),tbl('udm',in_schema("UDM.Intelligence",t)))
setwd(/Users/TJIpadAccess/Documents/competitive-data-science-predict-future-sales)
setwd("Users/TJIpadAccess/Documents/competitive-data-science-predict-future-sales")
setwd('Users/TJIpadAccess/Documents/competitive-data-science-predict-future-sales')
13000/411773
13000/411773*100
India <- 13000/411773*100
US <- 121980/2330578*100
Brazil <- 50058/1070139*100
Russia <- 8002/576952*100
UK <- 42589/303110*100
Delhi <- 2112/56746*100
Maharashtra <- 5984/128205*100
Gujrat <- 1638/26680*100
Kerela <- 21/3039
Covid_Data <- c(India, US, Brazil, Russia, UK)
library(rsconnect)
rsconnect::setAccountInfo(name='trijotsingh', token='71EEF356CD020F243F9F1E1E889D259A', secret='H0Jvdivoju8N/Wg77z2cBfm4+JWlv/x/8TIF46Mk')
update.packages(c("rsconnect"))
install.packages("rsconnect")
rsconnect::setAccountInfo(name='trijotsingh', token='71EEF356CD020F243F9F1E1E889D259A', secret='H0Jvdivoju8N/Wg77z2cBfm4+JWlv/x/8TIF46Mk')
library("rsconnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
rsconnect::setAccountInfo(name='trijotsingh', token='71EEF356CD020F243F9F1E1E889D259A', secret='H0Jvdivoju8N/Wg77z2cBfm4+JWlv/x/8TIF46Mk')
install.packages("rsconnect")
library(rsconnect)
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='trijotsingh', token='71EEF356CD020F243F9F1E1E889D259A', secret='H0Jvdivoju8N/Wg77z2cBfm4+JWlv/x/8TIF46Mk')
rsconnect::deployApp('/Users/TJIpadAccess/PycharmProjects/R Shiny')
rexp(100,rate=0.5)
dexp(x, rate=0.5)
plot(seq(0:5000),dexp(seq(0:5000), rate=0.5),type="l")
pexp(2,rate=0.5)
rweibull(100, 0.25, 2^(-1/0.25))
pnorm(0.95, 10, 5)
dnorm(1, 10, 5)
dnorm(seq(1:11), 10, 5)
sum(dnorm(seq(1:11), 10, 5))
sum(dnorm(seq(0:11), 10, 5))
1-sum(dnorm(seq(0:11), 10, 5))
1-sum(dnorm(seq(0:11), 10, 25))
1-sum(dnorm(seq(0:11), 10, sqrt(5)))
1-sum(dnorm(seq(0:11), 10, sqrt(5)))
dnorm(0,1)
dnorm(1,0,1)
pnorm(1,0,1)
?dnorm
pnorm(0.5,0,1)
pnorm(0.05,0,1)
qnorm(0.05,0,1)
qnorm(0.025,0,1)
qnorm(1-0.025,0,1)
1-sum(dnorm(seq(0:11), 10, sqrt(5)))
pnorm(3.5,5.5,1.25)
pnorm((3.5/5.5)/sqrt(1.25),0,1)
pnorm((3.5-5.5)/sqrt(1.25),0,1)
Data3 <- c(27.16,28.6,32.41,34.28,35.77,42.3,48.51,54.4,56.23,63.36,71.07,76.35,84.42,89.78,104.93,108.59,119.69,135.95,143.76,158.95)
z_x <- ((Data1-Data3)/sqrt(Data3))
Data1 <- c(39,43,34,31,23,50,48,43,48,47,62,63,84,86,120,121,122,162,151,184)
Data2 <- c(38.85,43.87,33.37,28.26,30.02,39.39,46.93,49.60,46.09,48.58,55.93,66.35,82.33,94.00,111.72,116.26,132.62,154.72,152.62,183.82)
z_x <- ((Data1-Data3)/sqrt(Data3))
z_x_2 <- (z_x)^2
mean(z_x_2)
mean(z_x)
z1x <- z_x[1:19]
z2x <- z_x[2:20]
cor(z1x,z2x)
cor(z1x,z2x) * sqrt(20)
x = 13.5
mu = 20
sigma = sqrt(10)
pnorm((x-mu)/sqrt(sigma),0,1)
x = 13.5
mu = 20
sigma = (10)
pnorm((x-mu)/sqrt(sigma),0,1)
x = 4.5
mu = 3.5
sigma = (1.75)
pnorm((x-mu)/sqrt(sigma),0,1)
x = 9
mu = 4.5
sigma = (1.055)
pnorm((x-mu)/sqrt(sigma),0,1)
x = 9
mu = 4.8
sigma = (1.152)
pnorm((x-mu)/sqrt(sigma),0,1)
y = c( -2, -3)
x = Data1[ Data1 >= y[1] & Data1 <= y[2]]
x
y = c( -3, -2)
x = Data1[ Data1 >= y[1] & Data1 <= y[2]]
x
y = c( -2, -1)
x = Data1[ Data1 >= y[1] & Data1 <= y[2]]
x
y = c( -1, 0)
x = Data1[ Data1 >= y[1] & Data1 <= y[2]]
x
y = c( -3, -2)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( -2, -1)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
z_x <- ((Data1-Data2)/sqrt(Data2))
y = c( -2, -1)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( -3, -2)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( -1, 0)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( 0,1)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( 1,2)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
y = c( 2,3)
x = z_x[ z_x >= y[1] & z_x <= y[2]]
x
O <- c(0,0,1,7,11,1,0,0)
E <- c(0,0.4,2.8,6.8,6.8,2.8,0.4,0)
zx <- ((O-E)^2)/E
zx[is.nan(zx)] <- 0
sum(zx)
1-pchisq(sum(zx),11)
O <- c(286,805,1548,755,464)
E <- c(308.64,848.76,1543.20,733.02,424.38)
obs.test.stat = sum(((O-E)^2)/E)
TS = 1-pchisq(obs.test.stat,4)
TS*100
1-pchisq(sum(zx),11)
(1-pchisq(sum(zx),11))*100
O <- c(0,0,1,7,11,1,0,0)
E <- c(0,0.4,2.8,6.8,6.8,2.8,0.4,0)
zx <- ((O-E)^2)/E
zx[is.nan(zx)] <- 0
sum(zx)
(1-pchisq(sum(zx),11))*100
(1-pchisq(sum(zx),3))*100
x = 8.5
mu = 9.375
sigma = (2.192)
pnorm((x-mu)/sqrt(sigma),0,1)
Age <- c(50:60)
Ec <- c(23308,19316,16914,21082,14820,24084,28076,22958,24960,21134,18374)
Age <- c(50:60)
Ec <- c(23308,19316,16914,21082,14820,24084,28076,22958,24960,21134,18374)
D <- c(70,58,54,90,70,96,114,86,102,86,94)
G_R <- c(0.00368,0.00379,0.00391,0.00402,,0.00415,0.00428,0.00441,0.00455,0.00469,0.00485,0.00500)
Age <- c(50:60)
Ec <- c(23308,19316,16914,21082,14820,24084,28076,22958,24960,21134,18374)
D <- c(70,58,54,90,70,96,114,86,102,86,94)
G_R <- c(0.00368,0.00379,0.00391,0.00402,0.00415,0.00428,0.00441,0.00455,0.00469,0.00485,0.00500)
Age <- c(50:60)
Ec <- c(23308,19316,16914,21082,14820,24084,28076,22958,24960,21134,18374)
O <- c(70,58,54,90,70,96,114,86,102,86,94)
G_R <- c(0.00368,0.00379,0.00391,0.00402,0.00415,0.00428,0.00441,0.00455,0.00469,0.00485,0.00500)
Age <- c(50:60)
Ec <- c(23308,19316,16914,21082,14820,24084,28076,22958,24960,21134,18374)
O <- c(70,58,54,90,70,96,114,86,102,86,94)
G_R <- c(0.00368,0.00379,0.00391,0.00402,0.00415,0.00428,0.00441,0.00455,0.00469,0.00485,0.00500)
E <- Ec*G_R
zx <- (O-E)/sqrt(E)
zx<=0
x = 3
mu = 11/2
sigma = (11/4)
pnorm((x-mu)/sqrt(sigma),0,1)
x = 3
mu = 11/2
sigma = (11/4)
pnorm((x-mu)/sqrt(sigma),0,1)*100
zx_2 <- zx^2
sum(zx_2)
1-pchisq(sum(zx_2),9)
?pchisq
pchisq(35,20)
pchisq(35,20,lower.tail = TRUE)
pchisq(35,20,lower.tail = FALSE)
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
library("vctrs", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
detach("package:vctrs", unload=TRUE)
remove.packages("vctrs")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
install.packages("devtools")
library("remotes", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
detach("package:remotes", unload=TRUE)
remove.packages("remotes")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
remove.packages("remotes")
install.packages("dplyr")
install.packages("tidyverse")
remove.packages("vctrs")
library("vctrs", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
detach("package:vctrs", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
install.packages("gridExtra")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
library("rlang", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library("vctrs", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
remove.packages("vctrs")
install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
library("xfun", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
remove.packages("xfun")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
xfunx
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
install.packages("devtools")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
# Or the development version from GitHub
install.packages("devtools")
devtools::install_github("tidyverse/tidyverse")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
wd()
getwd()
setwd("/Users/TJIpadAccess/Documents/GitHub/PDF/")
shinyApp(ui, server)
library("shiny")
shinyApp(ui, server)
shinyApp(ui, server)
getwd()
ls()
setwd("~/Documents/GitHub/PDF")
ls()
dir()
shinyApp(ui, server)
runApp("myapp")
runApp()
## Only run examples in interactive R sessions
if (interactive()) {
options(device.ask.default = FALSE)
# Define UI
ui <- fluidPage(
# Application title
titlePanel("Hello Shiny!"),
sidebarLayout(
# Sidebar with a slider input
sidebarPanel(
sliderInput("obs",
"Number of observations:",
min = 0,
max = 1000,
value = 500)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Server logic
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs))
})
}
# Complete app with UI and server components
shinyApp(ui, server)
}
## Only run this example in interactive R sessions
if (interactive()) {
# example app for inserting/removing a tab
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
actionButton("add", "Add 'Dynamic' tab"),
actionButton("remove", "Remove 'Foo' tab")
),
mainPanel(
tabsetPanel(id = "tabs",
tabPanel("Hello", "This is the hello tab"),
tabPanel("Foo", "This is the foo tab"),
tabPanel("Bar", "This is the bar tab")
)
)
)
)
server <- function(input, output, session) {
observeEvent(input$add, {
insertTab(inputId = "tabs",
tabPanel("Dynamic", "This a dynamically-added tab"),
target = "Bar"
)
})
observeEvent(input$remove, {
removeTab(inputId = "tabs", target = "Foo")
})
}
shinyApp(ui, server)
# example app for prepending/appending a navbarMenu
ui <- navbarPage("Navbar page", id = "tabs",
tabPanel("Home",
actionButton("prepend", "Prepend a navbarMenu"),
actionButton("append", "Append a navbarMenu")
)
)
server <- function(input, output, session) {
observeEvent(input$prepend, {
id <- paste0("Dropdown", input$prepend, "p")
prependTab(inputId = "tabs",
navbarMenu(id,
tabPanel("Drop1", paste("Drop1 page from", id)),
tabPanel("Drop2", paste("Drop2 page from", id)),
"------",
"Header",
tabPanel("Drop3", paste("Drop3 page from", id))
)
)
})
observeEvent(input$append, {
id <- paste0("Dropdown", input$append, "a")
appendTab(inputId = "tabs",
navbarMenu(id,
tabPanel("Drop1", paste("Drop1 page from", id)),
tabPanel("Drop2", paste("Drop2 page from", id)),
"------",
"Header",
tabPanel("Drop3", paste("Drop3 page from", id))
)
)
})
}
shinyApp(ui, server)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
n
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
